"tmux vim conavigation
let g:tmux_navigator_no_mappings = 1

nnoremap <silent> {c-h} :TmuxNavigateLeft<cr>
nnoremap <silent> {c-j} :TmuxNavigateDown<cr>
nnoremap <silent> {c-k} :TmuxNavigateUp<cr>
nnoremap <silent> {c-l} :TmuxNavigateRight<cr>
nnoremap <silent> {c-o} :TmuxNavigatePrevious<cr>

"rebind common typos
command! Q q
command! Qall qall

"basic settings
syntax enable             "enables syntax hilighting
filetype plugin indent on "react on filetyps with plugins and syntax
set scrolloff=4           "minimum number of lines to display around cursor
set hlsearch              "hilight search results
set smarttab              "<TAB> inserts 'shiftwidth' spaces
set tabstop=4             "tab spacing
set expandtab             "use spaces instead of tab
set shiftwidth=4          "amount of spaces for tab to insert
set autoindent            "automatically set the indent when creatig lines
set ruler                 "show cursor position information in statusline
set number                "show line numbers
set wrap                  "wrap text
set linebreak             "preserves word when wrapping
set ttyfast               "'smooth' scrolling
set mouse=a               "enable mouse in terminals that support it
set showmatch             "breifly show matching bracekt when inserting such
set incsearch             "incremental searching as soon as typing begins
set ignorecase            "ignore case when searching
set smartcase             "will override ignore case if searching w/ diff cases
set modeline              "use modelines ??????
set ttimeoutlen=50        "faster twitching for everything
set virtualedit=block     "allow cursor to be moved into empty space in visual
set laststatus=2          "always show status line
set encoding=utf-8        "utf-8 encoding
set backupdir=~/.vim/backup "centralized backup
set backspace=indent,eol,start "backspace everywhere
set noswapfile            "no swap files
set foldmethod=indent     "creates fold based on indentation levels
set foldlevel=20          "by defualt open folds to level 20
set cursorline            "hilights the line cursor is at

" Move up and down in autocomplete with <c-j> and <c-k>
"inoremap <expr> <c-j> ("\<C-n>")
"inoremap <expr> <c-k> ("\<C-p>")

" retain selection after visual indentation operations
vnoremap > >gv
vnoremap < <gv

" Copy/Paste with os buffer
noremap <leader>y "+y
noremap <leader>Y "+y$
nmap <leader>p "+p
nmap <leader>P "+P

"Y consistent with D
nnoremap Y y$

"intuitive split placement
set splitbelow
set splitright
" Disable Ex mode
map Q <Nop>

" Spell checking mappings {{{ "
" Pressing <leader>ff will toggle and untoggle spell checking,
" fe sets checking to english and fs sets checking to swedish.
nnoremap <silent> <leader>ff :setlocal spell!<cr>
nnoremap <silent> <leader>fs :setlocal spelllang=sv<cr>
nnoremap <silent> <leader>fe :setlocal spelllang=en<cr>
"go to next error
nnoremap <leader>fn ]s
"go to previous error
nnoremap <leader>fp [s

let mapleader =" "

"center window after jumping forward
nnoremap n nzz
nnoremap } }zz

"turn off search hilighting for current search
nnoremap <leader>l :nohlsearch<CR>
"turn off search hilighting for in insert mode
autocmd InsertEnter * :setlocal nohlsearch
autocmd InsertLeave * :setlocal hlsearch

"move by row rather than line
nnoremap j gj
nnoremap k gk
"reverse swap
nnoremap gj j
nnoremap gk k

"typo resilience
command! Q q
command! Qall qall
command! W w
command! Wall wall
command! Wq wq
command! WQ wq

"cursor line only in active window
au WinEnter * setlocal cursorline
au WinLeave * setlocal nocursorline

"this seems like nice undo history
if has("persistent_undo")
    set undodir=~/.vim/undodir
    set undofile
endif

"return to cursor location when reopenning file
if has("autocmd")
      autocmd BufReadPost * if line("'\"") > 0 && line ("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

